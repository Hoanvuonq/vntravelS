{"version":3,"file":"static/js/302.9f3fd18e.chunk.js","mappings":"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","sources":["pages/admin/components/luckyHistoryUser.tsx"],"sourcesContent":["import { Tooltip } from '@material-tailwind/react';\r\nimport { getAllInterventions, editIntervention, deleteIntervention } from 'api/admin';\r\nimport { IUserInfo } from 'api/type';\r\nimport { images } from 'assets';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport ToastProvider from 'hooks/useToastProvider';\r\nimport { useUserInfo } from 'hooks/UserContext';\r\n\r\ninterface PopupProps {\r\n    user: IUserInfo;\r\n}\r\n\r\ninterface Intervention {\r\n    _id: string;\r\n    userId: string;\r\n    journeyIndex: number;\r\n    additionalPoints: number;\r\n}\r\n\r\nconst LuckyHistoryUser: React.FC<PopupProps> = ({ user }) => {\r\n    const { fetchAdminUserInfo } = useUserInfo();\r\n    const [interventions, setInterventions] = useState<Intervention[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editMode, setEditMode] = useState<string | null>(null);\r\n    const [editValues, setEditValues] = useState<{ journeyIndex: number; additionalPoints: number }>({ journeyIndex: 0, additionalPoints: 0 });\r\n\r\n    useEffect(() => {\r\n        const fetchInterventions = async () => {\r\n            try {\r\n                const response = await getAllInterventions(user._id);\r\n                if (response.status) {\r\n                    setInterventions(response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Lỗi khi lấy nhật ký đơn may mắn:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInterventions();\r\n    }, [user._id]);\r\n\r\n    const handleEditClick = (intervention: Intervention) => {\r\n        setEditMode(intervention._id);\r\n        setEditValues({ journeyIndex: intervention.journeyIndex, additionalPoints: intervention.additionalPoints });\r\n    };\r\n\r\n    const handleSendClick = async (interventionId: string) => {\r\n        try {\r\n            await editIntervention(interventionId, editValues.journeyIndex, editValues.additionalPoints);\r\n            setInterventions((prev) =>\r\n                prev.map((intervention) => (intervention._id === interventionId ? { ...intervention, journeyIndex: editValues.journeyIndex, additionalPoints: editValues.additionalPoints } : intervention)),\r\n            );\r\n            setEditMode(null);\r\n            ToastProvider('success', 'Gửi đơn may mắn thành công !');\r\n        } catch (error) {\r\n            console.error('Error when editing lucky order:', error);\r\n            ToastProvider('error', 'Gửi đơn may mắn thất bại !');\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = async (interventionId: string) => {\r\n        try {\r\n            const result = await deleteIntervention(interventionId);\r\n            console.log('Intervention deleted successfully:', result);\r\n            setInterventions((prev) => prev.filter((intervention) => intervention._id !== interventionId));\r\n            ToastProvider('success', 'Xóa đơn may mắn thành công !');\r\n        } catch (error) {\r\n            console.error('Failed to delete intervention:', error);\r\n            ToastProvider('error', 'Xóa đơn may mắn thất bại !');\r\n        }\r\n    };\r\n\r\n    const HistoryPaymentMemo = useMemo(() => {\r\n        return interventions.map((intervention) => (\r\n            <div key={intervention._id} className={`xl:rounded-[1vw] rounded-[3vw] p-[1vw] flex items-center justify-between shadow-custom-3 history-journey`}>\r\n                <div className=\"flex items-center justify-between w-full xl:gap-[1vw] gap-[6vw]\">\r\n                    <div className=\"flex items-center xl:gap-[1vw] gap-[3vw]\">\r\n                        <img src={images.Star} alt=\"Star\" className=\"xl:w-[2.5vw] w-[10vw] hover-items\" />\r\n                        <div className=\"flex flex-col gap-[0.2vw]\">\r\n                            {editMode === intervention._id ? (\r\n                                <div className=\"flex flex-col gap-[0.2vw]\">\r\n                                    <p className=\"text-infoBill text-gray-700\">\r\n                                        <span className=\"font-bold\">ID :</span> {intervention._id.slice(-6)}\r\n                                    </p>\r\n                                    <p className=\"text-infoBill text-gray-700\">\r\n                                        <span className=\"font-bold\">Hành Trình Số : </span>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={editValues.journeyIndex}\r\n                                            onChange={(e) => setEditValues({ ...editValues, journeyIndex: Number(e.target.value) })}\r\n                                            className=\"indent-[0.4vw] tracking-[0.2vw] border border-gray-300 text-gray-900 xl:text-[0.8vw] text-[3.5vw] p-[0.2vw] focus:ring-blue-500 focus:border-blue-500 outline-1 outline-gray-300\"\r\n                                        />\r\n                                    </p>\r\n                                    <p className=\"text-infoBill text-gray-700\">\r\n                                        <span className=\"font-bold\">Số Tiền Cần Bù : </span>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={editValues.additionalPoints}\r\n                                            onChange={(e) => setEditValues({ ...editValues, additionalPoints: Number(e.target.value) })}\r\n                                            className=\"indent-[0.4vw] tracking-[0.2vw] border border-gray-300 text-gray-900 xl:text-[0.8vw] text-[3.5vw] p-[0.2vw] focus:ring-blue-500 focus:border-blue-500 outline-1 outline-gray-300\"\r\n                                        />\r\n                                    </p>\r\n                                </div>\r\n                            ) : (\r\n                                <>\r\n                                    <p className=\"text-infoBill text-gray-700\">\r\n                                        <span className=\"font-bold\">ID :</span> {intervention._id.slice(-6)}\r\n                                    </p>\r\n                                    <p className=\"text-infoBill text-gray-700\">\r\n                                        <span className=\"font-bold\">Hành Trình Số :</span> {intervention.journeyIndex}\r\n                                    </p>\r\n                                    <p className=\"text-infoBill text-gray-700\">\r\n                                        <span className=\"font-bold\">Số Tiền Cần Bù :</span> {intervention.additionalPoints}\r\n                                    </p>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center xl:flex-row flex-col xl:gap-[1vw] gap-[3vw]\">\r\n                        {editMode === intervention._id ? (\r\n                            <Tooltip content=\"Gửi Đơn May Mắn\">\r\n                                <img src={images.Send} alt=\"Send\" className=\"hover-items cursor-pointer xl:w-[1.5vw] w-[8vw]\" onClick={() => handleSendClick(intervention._id)} />\r\n                            </Tooltip>\r\n                        ) : (\r\n                            <Tooltip content=\"Chỉnh Sửa Đơn May Mắn\">\r\n                                <img src={images.Edit} alt=\"Edit\" className=\"hover-items cursor-pointer xl:w-[1.5vw] w-[8vw]\" onClick={() => handleEditClick(intervention)} />\r\n                            </Tooltip>\r\n                        )}\r\n                        <Tooltip content=\"Xóa Đơn May Mắn\">\r\n                            <img src={images.deleteIntervention} alt=\"Delete\" className=\"hover-items cursor-pointer xl:w-[1.5vw] w-[8vw]\" onClick={() => handleDeleteClick(intervention._id)} />\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    }, [interventions, editMode, editValues]);\r\n\r\n    const hasData = interventions.length > 0;\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-[1vw] p-[0.2vw]\">\r\n            {loading ? (\r\n                <div className=\"w-full all-center \">\r\n                    <div className=\"loader-ellipsis mt-[1vw]\">\r\n                        <div className=\"!bg-black\"></div>\r\n                        <div className=\"!bg-black\"></div>\r\n                        <div className=\"!bg-black\"></div>\r\n                        <div className=\"!bg-black\"></div>\r\n                    </div>\r\n                </div>\r\n            ) : hasData ? (\r\n                HistoryPaymentMemo\r\n            ) : (\r\n                <div className=\"w-full all-center xl:h-auto h-[60vw] flex-col xl:gap-[1vw] gap-[3vw] notes\">\r\n                    <img src={images.logoTravelS} alt=\"No Data\" className=\"xl:w-[10vw] w-[50vw] object-cover\" />\r\n                    <p className=\"text-titleNote\">User này chưa có nhật ký đơn may mắn !</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LuckyHistoryUser;\r\n"],"names":["_ref","user","fetchAdminUserInfo","useUserInfo","interventions","setInterventions","useState","loading","setLoading","editMode","setEditMode","editValues","setEditValues","journeyIndex","additionalPoints","useEffect","async","response","getAllInterventions","_id","status","data","error","console","fetchInterventions","HistoryPaymentMemo","useMemo","map","intervention","_jsx","className","children","_jsxs","src","images","Star","alt","slice","type","value","onChange","e","Number","target","_Fragment","Tooltip","content","Send","onClick","editIntervention","interventionId","prev","ToastProvider","handleSendClick","Edit","handleEditClick","deleteIntervention","result","log","filter","handleDeleteClick","hasData","length","logoTravelS"],"sourceRoot":""}