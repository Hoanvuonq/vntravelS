{"version":3,"file":"static/js/848.08aa29bb.chunk.js","mappings":"mNAUA,MAoEA,EApEiDA,IAAe,IAAd,KAAEC,GAAMD,EACtD,MAAOE,EAAUC,IAAcC,EAAAA,EAAAA,UAAyB,KACjDC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAEvCG,EAAAA,EAAAA,YAAU,KAC0BC,WAC5B,IACI,MAAMC,QAAiBC,EAAAA,EAAAA,IAA0BT,EAAKU,KAClDF,EAASP,UACTC,EAAWM,EAASP,SAE5B,CAAE,MAAOU,GACLC,QAAQD,MAAM,0DAAkCA,EACpD,CAAC,QACGN,GAAW,EACf,GAGJQ,EAAyB,GAC1B,CAACb,EAAKU,MAET,MAAMI,GAAqBC,EAAAA,EAAAA,UAAQ,IACxBd,EAASe,KAAKC,IACjBC,EAAAA,EAAAA,KAAA,OAA2BC,UAAW,+GAA+GC,UACjJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2CAA0CC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAAA,EAAOC,OAAQC,IAAI,WAAWN,UAAU,qCAClDE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACbC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8BAA6BC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,6BAAgB,IAAEH,EAAYS,WAE9DL,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8BAA6BC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,wBAAgB,KAAEO,EAAAA,EAAAA,IAAkC,IAArBV,EAAYS,YAE3EL,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8BAA6BC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,qBAAkB,IAAE,IAAIQ,KAAKX,EAAYY,aAAaC,qBAEtFZ,EAAAA,EAAAA,KAAA,KAAGC,UAAW,IAAGY,EAAAA,EAAAA,IAAmBd,EAAYe,mCAAmCZ,UAAEa,EAAAA,EAAAA,IAAchB,EAAYe,iBAbjHf,EAAYP,QAkB3B,CAACT,IAEEiC,EAAUjC,EAASkC,OAAS,EAElC,OACIjB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAC7ChB,GACGc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAGvBe,EACApB,GAEAO,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6EAA4EC,SAAA,EACvFF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAAA,EAAOa,YAAaX,IAAI,UAAUN,UAAU,uCACtDD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBC,SAAC,gFAGpC,C","sources":["pages/admin/components/depositHistoryUser.tsx"],"sourcesContent":["import { useEffect, useState, useMemo } from 'react';\r\nimport { images } from 'assets';\r\nimport { getUserTransactionHistory } from 'api/admin';\r\nimport { ITransaction, IUserInfo } from 'api/type';\r\nimport { formatAmount, getStatusClassName, getStatusText } from 'hooks/useColorStatus';\r\n\r\ninterface PopupProps {\r\n    user: IUserInfo;\r\n}\r\n\r\nconst DepositHistoryUser: React.FC<PopupProps> = ({ user }) => {\r\n    const [deposits, setDeposit] = useState<ITransaction[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchTransactionHistory = async () => {\r\n            try {\r\n                const response = await getUserTransactionHistory(user._id);\r\n                if (response.deposits) {\r\n                    setDeposit(response.deposits);\r\n                }\r\n            } catch (error) {\r\n                console.error('Lỗi khi lấy lịch sử giao dịch:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchTransactionHistory();\r\n    }, [user._id]);\r\n\r\n    const HistoryPaymentMemo = useMemo(() => {\r\n        return deposits.map((transaction) => (\r\n            <div key={transaction._id} className={`xl:rounded-[1vw] rounded-[3vw] p-[1vw] flex items-center justify-between shadow-custom-3 history-transaction`}>\r\n                <div className=\"flex items-center xl:gap-[1vw] gap-[6vw]\">\r\n                    <img src={images.Total1} alt=\"withdraw\" className=\"xl:w-[3vw] w-[10vw] hover-items\" />\r\n                    <div className=\"\">\r\n                        <p className=\"text-infoBill text-gray-700\">\r\n                            <span className=\"font-bold\">Số Điểm :</span> {transaction.amount}\r\n                        </p>\r\n                        <p className=\"text-infoBill text-gray-700\">\r\n                            <span className=\"font-bold\">Số Tiền :</span> {formatAmount(transaction.amount * 5000)}\r\n                        </p>\r\n                        <p className=\"text-infoBill text-gray-700\">\r\n                            <span className=\"font-bold\">Thời Gian :</span> {new Date(transaction.requestTime).toLocaleString()}\r\n                        </p>\r\n                        <p className={`${getStatusClassName(transaction.status)} !font-bold text-infoBill`}>{getStatusText(transaction.status)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    }, [deposits]);\r\n\r\n    const hasData = deposits.length > 0;\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-[1vw] p-[0.2vw]\">\r\n            {loading ? (\r\n                <div className=\"w-full all-center \">\r\n                    <div className=\"loader-ellipsis mt-[1vw]\">\r\n                        <div className=\"!bg-black\"></div>\r\n                        <div className=\"!bg-black\"></div>\r\n                        <div className=\"!bg-black\"></div>\r\n                        <div className=\"!bg-black\"></div>\r\n                    </div>\r\n                </div>\r\n            ) : hasData ? (\r\n                HistoryPaymentMemo\r\n            ) : (\r\n                <div className=\"w-full all-center xl:h-auto h-[60vw] flex-col xl:gap-[1vw] gap-[3vw] notes\">\r\n                    <img src={images.logoTravelS} alt=\"No Data\" className=\"xl:w-[10vw] w-[50vw] object-cover\" />\r\n                    <p className=\"text-titleNote\">User này chưa có lịch sử nạp tiền nào</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepositHistoryUser;\r\n"],"names":["_ref","user","deposits","setDeposit","useState","loading","setLoading","useEffect","async","response","getUserTransactionHistory","_id","error","console","fetchTransactionHistory","HistoryPaymentMemo","useMemo","map","transaction","_jsx","className","children","_jsxs","src","images","Total1","alt","amount","formatAmount","Date","requestTime","toLocaleString","getStatusClassName","status","getStatusText","hasData","length","logoTravelS"],"sourceRoot":""}