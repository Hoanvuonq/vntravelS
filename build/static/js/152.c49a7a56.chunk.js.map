{"version":3,"file":"static/js/152.c49a7a56.chunk.js","mappings":"oPAYA,MAqFA,EArF6CA,IAAe,IAAd,KAAEC,GAAMD,EAClD,MAAM,cAAEE,IAAkBC,EAAAA,EAAAA,MACnBC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAEjCG,EAAgBC,GACXA,EAAIC,QAAQ,MAAO,IAAIA,QAAQ,wBAAyB,KAiCnE,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,SACtDP,GACGQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iFAAgFC,SAAA,EAC3FF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAAA,EAAOC,YAAaC,IAAI,UAAUN,UAAU,mDACtDE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAIvBE,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAN,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kFAAiFC,SA7C9F,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,QA8CnCO,KAAI,CAACC,EAAOC,KACvBX,EAAAA,EAAAA,KAAA,UAEIC,UAAU,qJACVW,QAASA,IA5CdF,KACvBjB,EAAUI,EAAaa,GAAO,EA2CaG,CAAkBH,GAAOR,SAEvCQ,GAJIC,QAQjBX,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAC/BF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACFC,MAAM,gDACNC,YAAY,IACZC,KAAK,OACLhB,UAAU,iFACVS,MAAOlB,EACP0B,SAAWC,IAAMC,OA7DjBV,EA6DoCS,EAAEE,OAAOX,WA5DrEjB,EAAUI,EAAaa,IADCA,KA6DoD,OAG5DV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC1CF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,MAAM,qBAAWX,QAzD3BY,UAClB,MAAMC,EAAgBC,SAASlC,EAAOO,QAAQ,MAAO,KACrD,GAAI0B,GAAiB,EAGjB,OAFAE,QAAQC,MAAM,0BACdC,EAAAA,EAAAA,GAAc,UAAW,8DAG7BjC,GAAW,GACX,UACU,IAAIkC,SAASC,GAAYC,WAAWD,EAAS,aAC7CE,EAAAA,EAAAA,IAAa5C,EAAK6C,IAAKT,SACvBnC,KACNuC,EAAAA,EAAAA,GAAc,UAAW,sDAC7B,CAAE,MAAOD,IACLC,EAAAA,EAAAA,GAAc,QAAS,2DAC3B,CAAC,QACGjC,GAAW,EACf,GAwCqEuC,SAAUxC,YAKzE,C","sources":["pages/admin/components/depositUser.tsx"],"sourcesContent":["import { adminDeposit } from 'api/admin';\r\nimport Button from 'components/button';\r\nimport Input from 'components/input/inputProfile';\r\nimport ToastProvider from 'hooks/useToastProvider';\r\nimport { useState } from 'react';\r\nimport { IUserInfo } from 'api/type';\r\nimport { images } from 'assets';\r\nimport { useUserInfo } from 'hooks/UserContext';\r\ninterface PopupProps {\r\n    user: IUserInfo;\r\n}\r\n\r\nconst DepositHistory: React.FC<PopupProps> = ({ user }) => {\r\n    const { fetchUserInfo } = useUserInfo();\r\n    const [amount, setAmount] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const formatNumber = (num: string) => {\r\n        return num.replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n    };\r\n\r\n    const amountButtons = ['100', '200', '300', '400', '500', '1000', '2000', '5000'];\r\n\r\n    const handleAmountChange = (value: string) => {\r\n        setAmount(formatNumber(value));\r\n    };\r\n\r\n    const handleButtonClick = (value: string) => {\r\n        setAmount(formatNumber(value));\r\n    };\r\n\r\n    const handleDeposit = async () => {\r\n        const numericAmount = parseInt(amount.replace(/\\./g, ''));\r\n        if (numericAmount <= 0) {\r\n            console.error('Amount is invalid');\r\n            ToastProvider('warning', 'Vui Lòng Nhập Số Tiền Muốn Nạp');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            await new Promise((resolve) => setTimeout(resolve, 1000));\r\n            await adminDeposit(user._id, numericAmount);\r\n            await fetchUserInfo();\r\n            ToastProvider('success', 'Yêu Cầu Nạp Tiền Thành Công');\r\n        } catch (error) {\r\n            ToastProvider('error', 'Yêu Cầu Nạp Tiền Thất Bại !!');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <div className=\"all-center flex-col xl:gap-[1vw] gap-[3vw]\">\r\n                {loading ? (\r\n                    <div className=\"xl:!w-[30vw] h-[15vw] mt-[1vw] all-center  bg-overlayLoading/10 flex flex-col \">\r\n                        <img src={images.logoTravelS} alt=\"No Data\" className=\"xl:w-[10vw] sm:w-[40vw] w-[50vw] object-cover\" />\r\n                        <div className=\"loader-ellipsis\">\r\n                            <div className=\"!bg-black\"></div>\r\n                            <div className=\"!bg-black\"></div>\r\n                            <div className=\"!bg-black\"></div>\r\n                            <div className=\"!bg-black\"></div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"grid grid-cols-4 xl:gap-[1vw] gap-[3vw] xl:w-[30vw] w-full xl:py-[1vw] py-[3vw]\">\r\n                            {amountButtons.map((value, index) => (\r\n                                <button\r\n                                    key={index}\r\n                                    className=\"bg-blue hover:bg-blueHover text-white font-bold xl:py-[0.6vw] py-[2.5vw] xl:rounded-[0.4vw] rounded-[1.5vw] xl:text-[1vw] text-[2.8vw] hover-items\"\r\n                                    onClick={() => handleButtonClick(value)}\r\n                                >\r\n                                    {value}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"xl:w-[20vw] w-full\">\r\n                            <Input\r\n                                Label=\"Nhập Số Tiền Cần Nạp\"\r\n                                placeholder=\"0\"\r\n                                type=\"text\"\r\n                                className=\"xl:!p-[0.4vw] !p-[2.5vw] tracking-[0.1vw] font-bold xl:!text-[1vw] !text-[3vw]\"\r\n                                value={amount}\r\n                                onChange={(e) => handleAmountChange(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"xl:w-[10vw] w-[30vw] relative\">\r\n                            <Button title=\"Nạp Tiền\" onClick={handleDeposit} disabled={loading} />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepositHistory;\r\n"],"names":["_ref","user","fetchUserInfo","useUserInfo","amount","setAmount","useState","loading","setLoading","formatNumber","num","replace","_jsx","className","children","_jsxs","src","images","logoTravelS","alt","_Fragment","map","value","index","onClick","handleButtonClick","Input","Label","placeholder","type","onChange","e","handleAmountChange","target","Button","title","async","numericAmount","parseInt","console","error","ToastProvider","Promise","resolve","setTimeout","adminDeposit","_id","disabled"],"sourceRoot":""}